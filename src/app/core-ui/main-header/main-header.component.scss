@import '../../../common';

$mobileHorizontalPadding: 8px;
$navVerticalPadding: 4px;
$macExtraPadding: calc(var(--mac-title-bar-padding) - 8px);

:host {
  display: block;
  position: relative;
  user-select: none;
  -webkit-user-select: none; /* Safari */
}

:host-context(.isMac.isElectron) {
  padding-top: $macExtraPadding;
  -webkit-app-region: drag;
  cursor: grab;

  .wrapper {
    -webkit-app-region: drag;
  }

  &:active {
    cursor: grabbing;
  }

  .current-work-context-title,
  ::ng-deep button,
  ::ng-deep a,
  button,
  a {
    -webkit-app-region: no-drag;
  }
}

.wrapper {
  background: transparent;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: center;
  padding: $navVerticalPadding $mobileHorizontalPadding;
  //flex-wrap: wrap;
  min-height: var(--bar-height-large);

  @include mq(xs) {
    min-height: var(--bar-height);
    padding: $navVerticalPadding 16px;
  }
}

.current-work-context-title {
  //font-weight: bold;
  font-size: 18px;
  overflow: hidden;
  text-overflow: ellipsis;
  //flex-grow: 1;
  white-space: nowrap;
  max-width: 100%;
  cursor: pointer;
  border-radius: var(--card-border-radius);
  padding: var(--s) var(--s2) var(--s) var(--s);

  @include mq(xs) {
    padding-right: var(--s);
  }

  &:focus {
    outline: none;
  }
}

.project-settings-btn {
  display: none;
  @include mq(xs) {
    display: block;
    transition: var(--transition-standard);
    opacity: 0;
    margin-right: var(--s2);
    margin-left: calc(-1 * var(--s));
    position: relative;
    z-index: 1;
  }

  &:hover,
  .current-work-context-title:hover + & {
    opacity: 1;
  }
}

a,
button {
  cursor: pointer;
}

button.isActive2 {
  background-color: var(--c-accent);
  transition: background-color var(--transition-standard);
}

.action-nav {
  margin-right: 0px;
  margin-left: auto;
  display: flex;
  align-items: center;

  :host-context([dir='rtl']) & {
    margin-left: 0px;
    margin-right: auto;
  }

  ::ng-deep {
    button {
      margin-left: var(--s-quarter);

      @include mq(xs) {
        margin-left: var(--s);
      }
    }
  }
}

@keyframes pulse {
  0% {
    transform: scale(0.7);
  }
  25% {
    transform: scale(1);
  }
  50% {
    transform: scale(1);
  }
  100% {
    transform: scale(0.7);
  }
}

.play-btn-wrapper {
  position: relative;
  //margin-left: var(--s-half);
  //margin-right: var(--s-half);

  @include mq(xs) {
    margin-left: var(--s);
  }

  .pulse-circle {
    width: 48px;
    height: 48px;
    position: absolute;
    top: 0;
    left: -4px;
    right: 0;
    bottom: 0;
    border-radius: 50%;
    margin: auto;
    transform: scale(1, 1);
    animation: pulse 2s infinite;
    background: var(--c-accent);
    opacity: 0.6;
  }

  .play-btn {
    position: relative;
    margin-left: 0;
    // needs to be above the rest
    z-index: 2;

    .circle-svg {
      transform: rotate(-90deg);
      position: absolute;
      opacity: 0.15;
      top: -8px;
      right: -8px;
      pointer-events: none;
    }

    .mat-icon {
      position: relative;
      z-index: 2;
    }
  }

  .pomodoro-label {
    margin-left: 0;
    position: absolute;
    line-height: 1;
    padding: 2px 4px 1px;
    width: auto;
    left: 50%;
    transform: translateX(-50%);
    box-shadow: var(--whiteframe-shadow-2dp);
    font-weight: bold;
    border-radius: 8px;
    z-index: 4;
    pointer-events: none;
    bottom: calc(var(--s) * -0.25);

    background: var(--theme-bg-lighter);
    color: var(--theme-text-color-most-intense);
  }

  .pomodoro-controls {
    transition: var(--transition-standard);
    position: absolute;
    top: 100%;
    display: flex;
    flex-direction: column;
    left: 50%;
    transform: translateX(-50%);
    pointer-events: none;

    // add a little bit of extra hover area
    &:after {
      content: '';
      position: absolute;
      top: calc(var(--s) * -1.25);
      left: calc(var(--s) * -1.25);
      right: calc(var(--s) * -1.25);
      bottom: calc(var(--s) * -1.25);
    }
  }

  &:hover .pomodoro-controls {
    pointer-events: all;

    .pomodoro-btn {
      transform: translateY(0);
      opacity: 1;
    }
  }

  .pomodoro-btn {
    transition: var(--transition-standard);
    transform: translateY(-100%);
    opacity: 0;
    position: relative;
    z-index: 2;
    margin-top: var(--s);
    margin-left: 0;

    &:nth-child(2) {
      transform: translateY(-200%);
    }
  }
}

.current-task-title {
  position: absolute;
  right: 100%;
  width: auto;
  border: 2px solid var(--c-accent);
  border-radius: 12px;
  min-width: 50px;
  white-space: nowrap;
  padding: var(--s-half) var(--s2);
  padding-right: calc(var(--s) * 2.5);
  margin-right: calc(-1 * var(--s) * 2);
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  transition: var(--transition-standard);
  display: flex;

  @include mq(xs, max) {
    display: none;
  }

  background: var(--theme-bg-lighter);

  .title {
    max-width: 250px;
    text-overflow: ellipsis;
    overflow: hidden;
  }

  .project {
    padding-right: 0;
  }

  :host:hover & {
    opacity: 0;
  }
}

.simple-counter-mobile-trigger {
  margin-left: var(--s);
}

.simple-counter-buttons-outer-wrapper {
  position: relative;
}

.simple-counter-buttons {
  display: flex;

  @include mq(xs) {
    // Desktop mode - horizontal layout
    flex-direction: row;
    position: static;
    pointer-events: all;

    simple-counter-button {
      transition: none;
      transform: none;
      opacity: 1;
      position: static;
      margin-top: 0;
      margin-left: var(--s-quarter);

      @include mq(xs) {
        margin-left: var(--s);
      }
    }
  }

  @include mq(xs, max) {
    // Mobile mode - vertical dropdown
    position: absolute;
    transition: var(--transition-standard);
    top: 100%;
    flex-direction: column;
    left: 50%;
    transform: translateX(-50%);
    z-index: 2;
    pointer-events: none;

    &.isVisibleMobile {
      pointer-events: all;
    }

    simple-counter-button {
      transition: var(--transition-standard);
      transform: translateY(-100%);
      opacity: 0;
      position: relative;
      z-index: 2;
      margin-top: var(--s);
      margin-left: 0;

      &:nth-child(2) {
        transform: translateY(-200%);
      }
      &:nth-child(3) {
        transform: translateY(-300%);
      }
      &:nth-child(4) {
        transform: translateY(-400%);
      }
      &:nth-child(5) {
        transform: translateY(-500%);
      }
      &:nth-child(6) {
        transform: translateY(-600%);
      }
      &:nth-child(7) {
        transform: translateY(-700%);
      }
    }

    &.isVisibleMobile simple-counter-button {
      transform: translateY(0);
      opacity: 1;
    }
  }
}

.toggle-notes-btn {
  position: relative;
  overflow: visible !important;

  &.isActive.isRouteWithRightPanel::after {
    content: '';
    width: 100%;
    position: absolute;
    left: 1px;
    top: 0;
    bottom: -5px;
    border-top-left-radius: 4px;
    border-top-right-radius: 4px;
    z-index: -1;
    box-shadow: 0px -2px 3px 0px var(--theme-separator-alpha);

    background: var(--theme-sidebar-bg);
    //border-color: var(--theme-extra-border-color);
  }

  @include mq(xxxs, max) {
    &:disabled {
      display: none;
    }
  }
}

.note-ico {
  transition: var(--transition-standard);

  .toggle-notes-btn.isActive & {
    transform: rotate(45deg);
  }
}

.sync-state-ico {
  // important because it might be overwritten by material styles sometimes
  position: absolute !important;
  font-size: 10px;
  height: 10px;
  line-height: 10px;
  left: 50%;
  top: 50%;
  font-weight: bold;
  transform: translate(-50%, -50%);
}

.spin {
  animation: spin 1.5s linear infinite;
}

@keyframes spin {
  100% {
    transform: rotate(-360deg);
  }
}
